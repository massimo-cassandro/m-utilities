{% apply spaceless %}
{#
  svg icone

  parametri    possibili:
  class:       eventuale classe da assegnare all'svg (facoltativa)
  id:          id dell'elemento (obbligatorio)
  svg_file:    eventuale path del file svg, alternativo a quello std o corretto per uso nelle macro
  title:       facoltativo
  desc:        facoltativo
  aria_hidden: facoltativo, default true se desc o title sono definiti

  utilizzo di base
  {% include '@includes/icone.html.twig' with { id: 'xxxx', class: 'icona' } %}

  oppure:
  {% include '@includes/icone.html.twig' with {
    id: ['xxxx', 'yyyy', ...], // pi√π elementi
    class: 'yyyy',
    title: facoltativo
    desc: facoltativo
    aria_hidden: facoltativo, default true, false se desc o title sono definiti
    [svg_file: globals.glob_vars.icon_file] // solo per macro
  } %}

#}
{%- if id is not iterable -%}
	{% set id = [id] %}
{%- endif -%}
{% set base_id = id|join('') ~ 'now'|date('u')  %}
{% set ariaIDs = [] %}
{% set descUniqueId = null %}
{%- if desc is defined and desc -%}
  {% set aria_hidden = false %}
  {% set descUniqueId = 'd-' ~ base_id %}
  {% set ariaIDs = ariaIDs|merge([descUniqueId]) %}
{%- endif -%}
{% set titleUniqueId = null %}
{%- if title is defined and title -%}
  {% set aria_hidden = false %}
  {% set titleUniqueId = 't-' ~ base_id %}
  {% set ariaIDs = ariaIDs|merge([titleUniqueId]) %}
{%- endif -%}
{% set svg_file = svg_file is defined? svg_file : glob_vars.icon_file %}
<svg {{- class|default('')? (' class="' ~ class ~ '"')|raw : '' }} role="img"
  {%- if aria_hidden is defined and aria_hidden %} aria-hidden="true"{% endif -%}
  {%- if ariaIDs|length %} aria-labelledby="{{ ariaIDs|join(' ') }}"{% endif -%}>
  {%- if title is defined and title -%}
  	<title id="{{ titleUniqueId }}">{{ title }}</title>
  {%- endif -%}
  {%- if descUniqueId -%}
  	<desc id="{{ descUniqueId }}">{{ desc }}</desc>
  {%- endif -%}
  {% for item in id %}
    <use xlink:href="{{ svg_file }}#{{ item }}" class="{{ item }}"></use>
  {% endfor %}
</svg>

{% endapply %}
