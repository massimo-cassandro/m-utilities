@use 'sass:math';
@import './str_replace';

// https://github.com/waldemarfm/sass-svg-uri/blob/master/_svg-uri.scs
// Helper function to easily use an SVG inline in CSS
// without encoding it to base64, saving bytes.
// It also helps with browser support.

// A small function allowing skipping base64 encoding
// and simply pasting the SVG markup right in the CSS.
/// @author Jakob Eriksen
/// @link http://codepen.io/jakob-e/pen/doMoML
/// @param {String} $svg - SVG image to encode
/// @return {String} - Encoded SVG data uri

/// @author Massimo Cassandro
/// @param {String} $attr - string of attributes (e.g 'fill="#c00" class="..."')


@function svg-uri($svg, $attr:'') {
  $encoded: '';
  $slice: 2000;
  $index: 0;
  $loops: ceil(math.div(str-length($svg), $slice));

  @if $attr {
    $svg: str-replace($svg, '<svg', '<svg #{$attr}');
  }

  @for $i from 1 through $loops {
    $chunk: str-slice($svg, $index, $index + $slice - 1);
    $chunk: str-replace($chunk, '"', "'");
    $chunk: str-replace($chunk, '<', '%3C');
    $chunk: str-replace($chunk, '>', '%3E');
    $chunk: str-replace($chunk, '&', '%26');
    $chunk: str-replace($chunk, '#', '%23');
    $encoded: #{$encoded}#{$chunk};
    $index: $index + $slice;
  }

  @return url('data:image/svg+xml;charset=utf8,#{$encoded}');
}
