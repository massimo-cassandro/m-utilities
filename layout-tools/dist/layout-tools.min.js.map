{"version":3,"file":"layout-tools.min.js","sources":["../js/src/settings.js","../js/src/init.js","../js/src/ui.js","../js/src/breakpoints.js","../js/src/viewport-info.js","../js/src/device-Info.js","../js/src/imgs-info.js","../js/layout-tools.js"],"sourcesContent":["export var lt = {\n  times: '&VeryThinSpace;&times;&VeryThinSpace;', // carattere x e spaziatura\n  unitSpacing: '&VeryThinSpace;',\n  storage_key: 'lt_settings',\n\n  // defaults\n  settings: {\n    hidden: false,\n    pictures_info: false\n  },\n\n  upd_settings: obj => {\n    lt.settings = Object.assign({}, lt.settings, obj);\n    sessionStorage[lt.storage_key] = JSON.stringify(lt.settings);\n  }\n\n};\n","/**\n * layout_tools.js - 4 / Massimo Cassandro / 2016-2020\n */\n\n import {lt} from './settings.js';\nimport lt_ui from './ui.js';\nimport lt_brkpt from './breakpoints.js';\nimport lt_viewport_info from './viewport-info.js';\nimport lt_device_info from './device-Info.js';\nimport lt_imgs_info from './imgs-info.js';\n\n\nexport default function () {\n  const _VERSION = '4.2.0';\n\n  const stored_settings = sessionStorage[lt.storage_key]? JSON.parse(sessionStorage[lt.storage_key]) : {};\n  lt.settings = Object.assign({}, lt.settings , stored_settings);\n\n\n  // load css and init\n  let currentScript = document.currentScript;\n  lt.currentDir = currentScript.src.split('?')[0];\n  lt.currentDir = lt.currentDir.substring(0, lt.currentDir.lastIndexOf('/'));\n\n  lt.framework = currentScript.dataset.fw || 'bootstrap4';\n  lt.css = currentScript.dataset.css || lt.currentDir + '/layout-tools.css';\n\n  let lt_css_el = document.createElement('link');\n  lt_css_el.onload = function() {\n    lt_ui();\n    lt_brkpt();\n    lt_viewport_info();\n    lt_device_info();\n    lt_imgs_info();\n  };\n  lt_css_el.href = lt.css + '?v=' + _VERSION;\n  lt_css_el.rel =  'stylesheet';\n  lt_css_el.type = 'text/css';\n  lt_css_el.media = 'screen';\n  document.head.appendChild(lt_css_el);\n}\n","import {lt} from './settings.js';\n\nexport default function () {\n\n  // le toolbar aggiuntive possono essere caricate dopo layout tools\n  // e vengono quindi elborate dai selettori indicati in `other_toolbars_selectors`\n  let other_toolbars = null;\n\n  const wrapper_id = 'lt-wrapper',\n    other_toolbars_selectors = ['.sf-toolbar'], // selettori di altre toolbar da rimuovere\n\n    get_other_toolbars = () => {\n      if(other_toolbars === null) {\n        other_toolbars = [];\n        other_toolbars_selectors.forEach(selector => {\n          let this_toolbar = document.querySelector(selector);\n          if(this_toolbar) {\n            other_toolbars.push(this_toolbar);\n          }\n        });\n      }\n      return other_toolbars;\n    };\n\n\n  document.body.insertAdjacentHTML('beforeend', '<div id=\"' + wrapper_id + '\" class=\"lt-collapsed\"></div>');\n  lt.wrapper = document.getElementById(wrapper_id);\n\n  lt.wrapper.innerHTML = `<div class=\"lt-inner-wrapper\">\n      <div class=\"lt-content\">\n        <div>\n          <button type=\"button\" class=\"lt-hide-show-btn\">Hide</button>\n          <button type=\"button\" class=\"lt-remove-btn\">Remove</button>\n        </div>\n      </div>\n      <div class=\"lt-brkpt\">&#x2732;</div>\n    </div>`;\n\n  lt.content_wrapper = lt.wrapper.querySelector('.lt-content');\n  lt.brkpt_wrapper = lt.wrapper.querySelector('.lt-brkpt');\n\n  // contrazione wrapper\n  lt.brkpt_wrapper.addEventListener('click', function () {\n    lt.wrapper.classList.toggle('lt-collapsed');\n  }, false);\n\n  // layout tools e sf toolbar invisibili\n  const hide_btn = lt.content_wrapper.querySelector('.lt-hide-show-btn'),\n    set_hidden = (add_storage) => {\n      lt.wrapper.classList.toggle('lt-hidden');\n      let is_hidden = lt.wrapper.classList.contains('lt-hidden');\n\n      get_other_toolbars().forEach(toolbar => {\n        toolbar.toggleAttribute('hidden', is_hidden);\n      });\n\n      hide_btn.innerHTML = is_hidden ? 'Show' : 'Hide';\n      if(add_storage) {\n        lt.upd_settings({hidden: is_hidden});\n      }\n    };\n\n  hide_btn.addEventListener('click', () => {\n    set_hidden(true);\n  },false);\n\n  if(lt.settings.hidden) {\n    set_hidden(false);\n  }\n\n  // eliminazione completa delle barre\n  lt.content_wrapper.querySelector('.lt-remove-btn').addEventListener('click', () => {\n    lt.wrapper.remove();\n    get_other_toolbars().forEach(toolbar => {\n      toolbar.remove();\n    });\n    // la barra viene mostrata al successivo reload\n    lt.upd_settings({hidden: false});\n  });\n}\n","import {lt} from './settings.js';\n/*\n  caricamento indicatori breakpoint e dimensioni viewport\n\n  Se lo script Ã¨ definito  il parametro `fw: __framework__`, viene visualizzato un div informativo\n  con breakpoint attivo, dimensioni della pagina ecc.\n  e caricato un css di formattazione\n\n  __framework__ corrisponde alla sigla del fw: bootstrap3, bootstrap4, foundation6, ecc.\n\n*/\n\nexport default function () {\n\n  const fw_breakpoints_map= {\n\n    bootstrap3  : '<span class=\"visible-xs-inline\">xs</span>' +\n        '<span class=\"visible-sm-inline\">sm</span>' +\n        '<span class=\"visible-md-inline\">md</span>' +\n        '<span class=\"visible-lg-inline\">lg</span>',\n\n    bootstrap4  : '<span class=\"d-sm-none\">xs</span>' +\n        '<span class=\"d-none d-sm-inline d-md-none\">sm</span>' +\n        '<span class=\"d-none d-md-inline d-lg-none\">md</span>' +\n        '<span class=\"d-none d-lg-inline d-xl-none\">lg</span>' +\n        '<span class=\"d-none d-xl-inline\">xl</span>',\n\n    bs5  : '<span class=\"d-sm-none\">xs</span>' +\n        '<span class=\"d-none d-sm-inline d-md-none\">sm</span>' +\n        '<span class=\"d-none d-md-inline d-lg-none\">md</span>' +\n        '<span class=\"d-none d-lg-inline d-xl-none\">lg</span>' +\n        '<span class=\"d-none d-xl-inline d-xxl-none\">xl</span>' +\n        '<span class=\"d-none d-xxl-inline\">xxl</span>',\n\n    foundation6 : '<span class=\"show-for-small-only\">small</span>' +\n        '<span class=\"show-for-medium-only\">medium</span>' +\n        '<span class=\"show-for-large-only\">large</span>' +\n        '<span class=\"show-for-xlarge\">xlarge</span>'\n  };\n\n\n  if(lt.framework) {\n    lt.brkpt_wrapper.innerHTML = fw_breakpoints_map[lt.framework];\n  }\n\n}\n","import {lt} from './settings.js';\n\nexport default function () {\n  'use strict';\n\n  //viewport info\n  lt.content_wrapper.insertAdjacentHTML('beforeend', '<div class=\"lt-vpinfo\"></div>');\n\n  const lt_vpinfo = lt.content_wrapper.querySelector('.lt-vpinfo'),\n    body_font_size = parseFloat(window.getComputedStyle(document.body, null)\n      .getPropertyValue('font-size')),\n    getViewportSize = function () {\n      let vw = Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0),\n        vh = Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0),\n        vw_em = (vw / body_font_size).toFixed(2),\n        vh_em = (vh / body_font_size).toFixed(2),\n\n        body_width = document.documentElement.clientWidth,\n        body_width_em = (body_width / body_font_size).toFixed(2),\n        body_height = document.documentElement.clientHeight,\n        body_height_em = (body_height / body_font_size).toFixed(2);\n\n      lt_vpinfo.innerHTML = `<div class=\"heading\">Viewport info</div>\n        ${vw}${lt.times}${vh}${lt.unitSpacing}px\n        /\n        ${vw_em}${lt.times}${vh_em}${lt.unitSpacing}em\n        <br><br>\n        <strong>body*:</strong><br>\n        ${body_width}${lt.times}${body_height}${lt.unitSpacing}px\n        /\n        ${body_width_em}${lt.times}${body_height_em}${lt.unitSpacing}em\n        <br>\n        <small><em>(*) Altezza uguale a viewport se body height: 100%</em></small>`;\n    };\n\n\n  getViewportSize();\n\n  if('ResizeObserver' in window) {\n\n    const resizeObserver = new ResizeObserver(() => {\n      getViewportSize();\n    });\n\n    resizeObserver.observe(document.body);\n\n  } else {\n    window.onresize = getViewportSize; // safari, ie\n  }\n}\n","import {lt} from './settings.js';\n\nexport default function () {\n\n  //device info\n\n  lt.content_wrapper.insertAdjacentHTML('beforeend', '<div class=\"lt-device-info\"></div>');\n\n  const lt_dinfo = lt.content_wrapper.querySelector('.lt-device-info');\n\n  lt_dinfo.innerHTML = `<div class=\"heading\">Device info</div>\n    <dl>\n      <dt>userAgent</dt>\n      <dd>\n        ${window.navigator.userAgent}\n      </dd>\n      <dt>devicePixelRatio</dt>\n      <dd>\n        ${window.devicePixelRatio}\n      </dd>\n      <dt>screen.width / height</dt>\n      <dd>\n        ${window.screen.width}${lt.times}${window.screen.height}${lt.unitSpacing}px\n      </dd>\n    </dl>`;\n\n}\n","import {lt} from './settings.js';\n\nexport default function () {\n  'use strict';\n\n  //ui\n  lt.content_wrapper.insertAdjacentHTML('beforeend',\n    '<div><label><input type=\"checkbox\" class=\"lt-imgs-info-trigger\">Imgs info</label</div>'\n  );\n\n  let imgs = document.getElementsByTagName('img');\n\n  const imgsInfoTrigger = lt.content_wrapper.querySelector('.lt-imgs-info-trigger'),\n    removeImgsInfo = () => {\n      document.querySelectorAll('.lt-img-info-wrapper').forEach(item => {\n        item.remove();\n      });\n    },\n    shortenSrcString = (str) => {\n      // mantiene solo gli ultimi due elementi del path\n      const shortenSrc = src => {\n        let srcElements = src.trim().split('/'),\n          strPrefix = srcElements.length > 2? '[&hellip;] /' : '';\n        return `<span title=\"${src}\">${strPrefix}${srcElements.slice(-2).join('/')}</span>`;\n      };\n\n      return str.split(',').map(item => {\n        return shortenSrc(item);\n      }).join(',<br>');\n    },\n    formatPropValue = (prop, value) => {\n      if(value) {\n        if(['src', 'currentSrc', 'srcset'].indexOf(prop) !== -1 ) {\n          return shortenSrcString(value);\n        } else {\n          return value;\n        }\n      } else {\n        return '&mdash;';\n      }\n    },\n\n    //img info\n    showImgsInfo = () => {\n\n      [...imgs].forEach(img => {\n\n        const img_info_rows = () => {\n          const img_props = [\n            'src',\n            'currentSrc',\n            'srcset',\n            'sizes',\n            'media',\n            'width',\n            'height',\n            'naturalWidth',\n            'naturalHeight',\n            'id',\n            'className'\n          //'attributes'\n          ];\n\n          let rows = '';\n          // img.dataset.ltImgIdx = idx;\n\n          img_props.forEach(prop => {\n            rows += `<tr>\n              <th scope=\"row\">${prop}</th>\n              <td class=\"lt-img-${prop}\">${formatPropValue(prop, img[prop])}</td>\n            </tr>`;\n          });\n\n          return rows;\n        };\n\n        img.insertAdjacentHTML('afterend',\n          `<details class=\"lt-img-info-wrapper\">\n            <summary>Info</summary>\n            <table>\n              <tbody>\n                ${img_info_rows()}\n              </tbody>\n            </table>\n          </details>`\n        );\n\n\n\n      }); // end foreach\n    }, // end showImgsInfo\n\n    updImgsInfo = () => {\n      const upd_img_props = [\n        'currentSrc',\n        'width',\n        'height'\n      ];\n      [...imgs].forEach(img => {\n        upd_img_props.forEach(prop => {\n          let sibling =img.nextElementSibling.querySelector(`td.lt-img-${prop}`);\n          if(sibling) {\n            sibling.innerHTML = formatPropValue(prop, img[prop]);\n          }\n        });\n      }); // end foreach\n\n    }; // end updImgsInfo\n\n  imgsInfoTrigger.addEventListener('click', () => {\n    lt.upd_settings({imgs_info: imgsInfoTrigger.checked});\n\n    if( imgsInfoTrigger.checked ) {\n      showImgsInfo();\n    } else {\n      removeImgsInfo();\n    }\n  }, false);\n\n  if(lt.settings.imgs_info) {\n    showImgsInfo();\n    imgsInfoTrigger.checked = true;\n  }\n\n  if('ResizeObserver' in window) {\n\n    const resizeObserver = new ResizeObserver(() => {\n      if( imgsInfoTrigger.checked ) {\n        updImgsInfo();\n      }\n    });\n\n    resizeObserver.observe(document.body);\n\n  } else {\n    window.onresize = function () {\n      if( imgsInfoTrigger.checked ) {\n        updImgsInfo();\n      }\n    }; // safari, ie\n  }\n\n}\n","import init from './src/init';\ninit();\n"],"names":["lt","times","unitSpacing","storage_key","settings","hidden","pictures_info","upd_settings","obj","Object","assign","sessionStorage","JSON","stringify","stored_settings","parse","currentScript","document","currentDir","src","split","substring","lastIndexOf","framework","dataset","fw","css","lt_css_el","createElement","onload","other_toolbars","other_toolbars_selectors","get_other_toolbars","forEach","selector","this_toolbar","querySelector","push","body","insertAdjacentHTML","wrapper","getElementById","innerHTML","content_wrapper","brkpt_wrapper","addEventListener","classList","toggle","hide_btn","set_hidden","add_storage","is_hidden","contains","toolbar","toggleAttribute","remove","lt_ui","bootstrap3","bootstrap4","bs5","foundation6","lt_vpinfo","body_font_size","parseFloat","window","getComputedStyle","getPropertyValue","getViewportSize","vw","Math","max","documentElement","clientWidth","innerWidth","vh","clientHeight","innerHeight","vw_em","toFixed","vh_em","body_width","body_width_em","body_height","body_height_em","ResizeObserver","observe","onresize","lt_viewport_info","navigator","userAgent","devicePixelRatio","screen","width","height","imgs","getElementsByTagName","imgsInfoTrigger","formatPropValue","prop","value","indexOf","map","item","srcElements","trim","length","slice","join","shortenSrc","showImgsInfo","img","rows","img_info_rows","updImgsInfo","upd_img_props","sibling","nextElementSibling","imgs_info","checked","querySelectorAll","lt_imgs_info","href","rel","type","media","head","appendChild","init"],"mappings":"yBAAO,IAAIA,EAAK,CACdC,MAAO,wCACPC,YAAa,kBACbC,YAAa,cAGbC,SAAU,CACRC,QAAQ,EACRC,eAAe,GAGjBC,aAAcC,IACZR,EAAGI,SAAWK,OAAOC,OAAO,GAAIV,EAAGI,SAAUI,GAC7CG,eAAeX,EAAGG,aAAeS,KAAKC,UAAUb,EAAGI,aCDxC,WACb,MAEMU,EAAkBH,eAAeX,EAAGG,aAAcS,KAAKG,MAAMJ,eAAeX,EAAGG,cAAgB,GACrGH,EAAGI,SAAWK,OAAOC,OAAO,GAAIV,EAAGI,SAAWU,GAI9C,IAAIE,EAAgBC,SAASD,cAC7BhB,EAAGkB,WAAaF,EAAcG,IAAIC,MAAM,KAAK,GAC7CpB,EAAGkB,WAAalB,EAAGkB,WAAWG,UAAU,EAAGrB,EAAGkB,WAAWI,YAAY,MAErEtB,EAAGuB,UAAYP,EAAcQ,QAAQC,IAAM,aAC3CzB,EAAG0B,IAAMV,EAAcQ,QAAQE,KAAO1B,EAAGkB,WAAa,oBAEtD,IAAIS,EAAYV,SAASW,cAAc,QACvCD,EAAUE,OAAS,YC1BN,WAIb,IAAIC,EAAiB,KAErB,MACEC,EAA2B,CAAC,eAE5BC,EAAqB,KACG,OAAnBF,IACDA,EAAiB,GACjBC,EAAyBE,SAAQC,IAC/B,IAAIC,EAAelB,SAASmB,cAAcF,GACvCC,GACDL,EAAeO,KAAKF,OAInBL,GAIXb,SAASqB,KAAKC,mBAAmB,YAAa,oDAC9CvC,EAAGwC,QAAUvB,SAASwB,eAlBH,cAoBnBzC,EAAGwC,QAAQE,UAAY,qTAUvB1C,EAAG2C,gBAAkB3C,EAAGwC,QAAQJ,cAAc,eAC9CpC,EAAG4C,cAAgB5C,EAAGwC,QAAQJ,cAAc,aAG5CpC,EAAG4C,cAAcC,iBAAiB,SAAS,WACzC7C,EAAGwC,QAAQM,UAAUC,OAAO,mBAC3B,GAGH,MAAMC,EAAWhD,EAAG2C,gBAAgBP,cAAc,qBAChDa,EAAcC,IACZlD,EAAGwC,QAAQM,UAAUC,OAAO,aAC5B,IAAII,EAAYnD,EAAGwC,QAAQM,UAAUM,SAAS,aAE9CpB,IAAqBC,SAAQoB,IAC3BA,EAAQC,gBAAgB,SAAUH,MAGpCH,EAASN,UAAYS,EAAY,OAAS,OACvCD,GACDlD,EAAGO,aAAa,CAACF,OAAQ8C,KAI/BH,EAASH,iBAAiB,SAAS,KACjCI,GAAW,MACX,GAECjD,EAAGI,SAASC,QACb4C,GAAW,GAIbjD,EAAG2C,gBAAgBP,cAAc,kBAAkBS,iBAAiB,SAAS,KAC3E7C,EAAGwC,QAAQe,SACXvB,IAAqBC,SAAQoB,IAC3BA,EAAQE,YAGVvD,EAAGO,aAAa,CAACF,QAAQ,ODhDzBmD,GEYCxD,EAAGuB,YACJvB,EAAG4C,cAAcF,UA5BO,CAExBe,WAAc,uKAKdC,WAAc,0OAMdC,IAAO,iSAOPC,YAAc,2LAQkC5D,EAAGuB,YCxCxC,WAIbvB,EAAG2C,gBAAgBJ,mBAAmB,YAAa,iCAEnD,MAAMsB,EAAY7D,EAAG2C,gBAAgBP,cAAc,cACjD0B,EAAiBC,WAAWC,OAAOC,iBAAiBhD,SAASqB,KAAM,MAChE4B,iBAAiB,cACpBC,EAAkB,WAChB,IAAIC,EAAKC,KAAKC,IAAIrD,SAASsD,gBAAgBC,aAAe,EAAGR,OAAOS,YAAc,GAChFC,EAAKL,KAAKC,IAAIrD,SAASsD,gBAAgBI,cAAgB,EAAGX,OAAOY,aAAe,GAChFC,GAAST,EAAKN,GAAgBgB,QAAQ,GACtCC,GAASL,EAAKZ,GAAgBgB,QAAQ,GAEtCE,EAAa/D,SAASsD,gBAAgBC,YACtCS,GAAiBD,EAAalB,GAAgBgB,QAAQ,GACtDI,EAAcjE,SAASsD,gBAAgBI,aACvCQ,GAAkBD,EAAcpB,GAAgBgB,QAAQ,GAE1DjB,EAAUnB,UAAY,qDAClB0B,IAAKpE,EAAGC,QAAQyE,IAAK1E,EAAGE,qCAExB2E,IAAQ7E,EAAGC,QAAQ8E,IAAQ/E,EAAGE,iFAG9B8E,IAAahF,EAAGC,QAAQiF,IAAclF,EAAGE,qCAEzC+E,IAAgBjF,EAAGC,QAAQkF,IAAiBnF,EAAGE,mHAMvDiE,IAEG,mBAAoBH,OAEE,IAAIoB,gBAAe,KACxCjB,OAGakB,QAAQpE,SAASqB,MAGhC0B,OAAOsB,SAAWnB,EHhBlBoB,GIzBFvF,EAAG2C,gBAAgBJ,mBAAmB,YAAa,sCAElCvC,EAAG2C,gBAAgBP,cAAc,mBAEzCM,UAAY,mGAIbsB,OAAOwB,UAAUC,gFAIjBzB,OAAO0B,4FAIP1B,OAAO2B,OAAOC,QAAQ5F,EAAGC,QAAQ+D,OAAO2B,OAAOE,SAAS7F,EAAGE,wCCpBtD,WAIbF,EAAG2C,gBAAgBJ,mBAAmB,YACpC,0FAGF,IAAIuD,EAAO7E,SAAS8E,qBAAqB,OAEzC,MAAMC,EAAkBhG,EAAG2C,gBAAgBP,cAAc,yBAkBvD6D,EAAkB,CAACC,EAAMC,IACpBA,GACqD,IAAnD,CAAC,MAAO,aAAc,UAAUC,QAAQF,GACjBC,EAPjB/E,MAAM,KAAKiF,KAAIC,GANPnF,CAAAA,IACjB,IAAIoF,EAAcpF,EAAIqF,OAAOpF,MAAM,KAEnC,MAAO,gBAAgBD,MADToF,EAAYE,OAAS,EAAG,eAAiB,KACZF,EAAYG,OAAO,GAAGC,KAAK,eAI/DC,CAAWN,KACjBK,KAAK,SAOGR,EAGF,UAKXU,EAAe,KAEb,IAAIf,GAAM7D,SAAQ6E,IA+BhBA,EAAIvE,mBAAmB,WACrB,2IA9BoB,MAgBpB,IAAIwE,EAAO,GAUX,MAzBkB,CAChB,MACA,aACA,SACA,QACA,QACA,QACA,SACA,eACA,gBACA,KACA,aAOQ9E,SAAQiE,IAChBa,GAAQ,uCACYb,2CACEA,MAASD,EAAgBC,EAAMY,EAAIZ,iCAIpDa,GAQCC,8EAWdC,EAAc,KACZ,MAAMC,EAAgB,CACpB,aACA,QACA,UAEF,IAAIpB,GAAM7D,SAAQ6E,IAChBI,EAAcjF,SAAQiE,IACpB,IAAIiB,EAASL,EAAIM,mBAAmBhF,cAAc,aAAa8D,KAC5DiB,IACDA,EAAQzE,UAAYuD,EAAgBC,EAAMY,EAAIZ,YAOxDF,EAAgBnD,iBAAiB,SAAS,KACxC7C,EAAGO,aAAa,CAAC8G,UAAWrB,EAAgBsB,UAExCtB,EAAgBsB,QAClBT,IAnGA5F,SAASsG,iBAAiB,wBAAwBtF,SAAQqE,IACxDA,EAAK/C,eAsGR,GAEAvD,EAAGI,SAASiH,YACbR,IACAb,EAAgBsB,SAAU,GAGzB,mBAAoBtD,OAEE,IAAIoB,gBAAe,KACpCY,EAAgBsB,SAClBL,OAIW5B,QAAQpE,SAASqB,MAGhC0B,OAAOsB,SAAW,WACZU,EAAgBsB,SAClBL,KLxGJO,IAEF7F,EAAU8F,KAAOzH,EAAG0B,IAAH1B,WACjB2B,EAAU+F,IAAO,aACjB/F,EAAUgG,KAAO,WACjBhG,EAAUiG,MAAQ,SAClB3G,SAAS4G,KAAKC,YAAYnG,GMtC5BoG"}